# DC/OS System Requirements as of https://docs.mesosphere.com/1.11/installing/production/system-requirements/
- name: "Gather OS specific variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "vars/{{ ansible_distribution }}.yml"
    - "vars/generic.yml"
  tags: vars

- name: "Populate service facts"
  service_facts: {}

- name: "Disabled firewalld (Only on some platforms)"
  systemd:
    name: firewalld
    state: stopped
    enabled: false
  when: "'firewalld.service' in ansible_facts.services"

- name: "Disabled DNSmasq (Only on some platforms)"
  systemd:
    name: dnsmasq
    state: stopped
    enabled: false
  when: "'dnsmasq.service' in ansible_facts.services"

- name: "Docker CE (stable) repository (Only non-EL systems)"
  yum_repository:
    name: "{{ dcos_docker_repo_name }}"
    description: Docker CE Repository
    baseurl: "https://download.docker.com/linux/centos/7/$basearch/stable"
    enabled: yes
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg
  when: ansible_distribution == 'CentOS'

- name: "Remove docker legacy libraries"
  yum:
    name: "docker-engine-selinux"
    update_cache: true
    state: absent

- name: "Docker installed"
  yum:
    name: "{{ dcos_docker_pkg_name }}"
    update_cache: true
    enablerepo: "{{ dcos_docker_repo_name }}"
    disablerepo: "dockerrepo"
    state: present

- name: "Docker running"
  systemd:
    name: docker
    state: started
    enabled: true

- name: "Install EPEL repositories for required packages"
  yum:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    state: present

- name: "Install required system packages"
  yum:
    name: [
        'tar',
         'xz',
        'unzip',
        'curl',
        'ipset',
        'chrony',
        'yum-utils',
        'net-tools',
        'bind-utils',
        'bash',
        'coreutils',
        'gawk',
        'gettext',
        'grep',
        'iproute',
        'util-linux',
        'sed',
        'jq' # not technically required by DC/OS but by this Ansible role for checks
        ]
    state: latest

- name: "SELinux '{{ dcos['selinux_mode'] | default('permissive') }}'"
  selinux:
    policy: targeted
    state: "{{ dcos['selinux_mode'] | default('permissive') }}"

- name: "Ensure groups 'nogroup' and 'docker' exist"
  group:
    name: "{{ item }}"
    state: present
  with_items:
    - nogroup
    - docker
